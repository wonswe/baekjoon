# 문제
# 땅 위에 달팽이가 있다. 이 달팽이는 높이가 V미터인 나무 막대를 올라갈 것이다.

# 달팽이는 낮에 A미터 올라갈 수 있다. 하지만, 밤에 잠을 자는 동안 B미터 미끄러진다. 또, 정상에 올라간 후에는 미끄러지지 않는다.

# 달팽이가 나무 막대를 모두 올라가려면, 며칠이 걸리는지 구하는 프로그램을 작성하시오.

# 입력
# 첫째 줄에 세 정수 A, B, V가 공백으로 구분되어서 주어진다. (1 ≤ B < A ≤ V ≤ 1,000,000,000)

# 출력
# 첫째 줄에 달팽이가 나무 막대를 모두 올라가는데 며칠이 걸리는지 출력한다.

# 예제 입력 1 
# 2 1 5
# 예제 출력 1 
# 4
# 예제 입력 2 
# 5 1 6
# 예제 출력 2 
# 2
# 예제 입력 3 
# 100 99 1000000000
# 예제 출력 3 
# 9999999012

A, B, V = map(int, input().split())

# current = 1
# days = 0

# while V > current:
#     current += (A - B)
#     days += 1

# print(days)

# 위 코드는 논리적으로는 맞지만, 반복 횟수가 너무 커서 큰 입력값 (예: 10억)일 때
# 실질적으로 끝나지 않는 (매우 오래 걸리는) 문제가 발생 
# 시간 복잡도 때문에 출력이 안 되는 것처럼 보이거나, 너무 오래 걸려서 멈춰버리는 현상

# 마지막 날 전까지는 매일 (A - B)만큼 올라가고
# 마지막 날 아침에 A미터를 올라가면 바로 V이상에 도달해야 함.

# (n - 1)일 동안은 매일 (A - B)씩 올라가서 (n - 1)일 후 위치는 (A - B) x (n - 1)
# n번째 날 아침에 A미터를 올라가면 최종 높이가 (A - B) x (n - 1) + A
# (A - B) x (n - 1) + A >= V; 최종 높이가 V 이상이면 n번째 날에 도착하는 달팽이

# 최종 식은 n = [(V - A) / (A - B)] + 1

days = (V - B - 1) // (A - B) + 1
print(days)